import Head from 'next/head'
import { useEffect, useRef, useState } from 'react'
import items from './../data.json';
import useResizeObserver from '../hooks/resizeObserver';
import AxisBottom from '../components/AxisBottom';
import AxisLeft from '../components/AxisLeft';
import CubeChart from '../components/CubeChart';
import Rects from '../components/Rects';

export async function getStaticProps(context) {
  return {
    props: { data: items },
  }
}

function generateMegaSena() {
  let arr = [];
  while (arr.length < 6) {
    let num = Math.floor(Math.random() * 100) + 1;
    if (!arr.includes(num)) {
      arr.push(num);
    }
  }
  return arr;
}

export default function Home({ data }) {
  const containerRef = useRef();
  const dimensions = useResizeObserver(containerRef);
  const margin = { top: 5, right: 25, bottom: 30, left: 25 };
  const [size, setSize] = useState({ width: 0, height: 0 });

  useEffect(() => {
    if (!dimensions) return;
    setSize({
      width: dimensions.width - margin.left - margin.right,
      height: dimensions.height - margin.top - margin.bottom,
      svgWidth: dimensions.width,
      svgHeight: dimensions.height,
    });
    return () => null;
  }, [dimensions]);

  return (
    <div className="container-app">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div ref={containerRef} className="container-ref">
        <CubeChart margin={margin} size={size} data={data}>
          <AxisLeft dataKey="group" />
          <AxisBottom dataKey="variable" />
          <Rects dataXKey="group" dataYKey="variable" />
        </CubeChart>
      </div>
    </div>
  )
}
